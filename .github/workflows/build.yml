name: Linux_Container_Workflow

on:
  workflow_dispatch:

env:
  RUNNER_VERSION: 2.293.0
  MEILI_NO_ANALYTICS: true
  SEARCH: true
  HOST: 0.0.0.0
  OPENAI_API_KEY: user_provided
  BINGAI_TOKEN: user_provided
  CHATGPT_TOKEN: user_provided
  ANTHROPIC_API_KEY: user_provided
  PALM_KEY: user_provided

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build GitHub Runner container image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/pwd9000-github-runner-lin:${{ env.RUNNER_VERSION }} .

      - name: 'Push container image to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/pwd9000-github-runner-lin:${{ env.RUNNER_VERSION }}

      - name: 'Create ACI'
        run: |
          az container create --resource-group "$aciResourceGroupName" `
              --name "$aciName" `
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/pwd9000-github-runner-lin:${{ env.RUNNER_VERSION }}" `
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" `
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" `
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" `
              --environment-variables JWT_SECRET="${{ secrets.JWT_SECRET }}" CREDS_IV="${{ secrets.CREDS_IV }}" CREDS_KEY="${{ secrets.CREDS_KEY }}" MONGO_URI="${{ secrets.MONGO_URI }}" MEILI_MASTER_KEY="${{ secrets.MEILI_MASTER_KEY }}" MEILI_NO_ANALYTICS="$MEILI_NO_ANALYTICS" SEARCH="$SEARCH" HOST="$HOST" OPENAI_API_KEY="$OPENAI_API_KEY" BINGAI_TOKEN="$BINGAI_TOKEN" CHATGPT_TOKEN="$CHATGPT_TOKEN" ANTHROPIC_API_KEY="$ANTHROPIC_API_KEY" PALM_KEY="$PALM_KEY" `
              --os-type "$osType"
